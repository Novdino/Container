{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files\\\\School Programs\\\\honours\\\\Container\\\\app\\\\src\\\\App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  const fs = require('fs');\n\n  fs.readFile('logs.txt', 'utf-8', (err, data) => {\n    if (err) throw err; // Converting Raw Buffer to text\n    // data using tostring function.\n\n    console.log(data);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topbar\",\n      children: \"Game P,W Scores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bar1\",\n      children: \"Produce\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bar2\",\n      children: \"Wares\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bar3\",\n      children: \"Auction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bar4\",\n      children: \"History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","App","fs","require","readFile","err","data","console","log"],"sources":["D:/Program Files/School Programs/honours/Container/app/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n\n  const fs = require('fs')\n  fs.readFile('logs.txt', 'utf-8', (err, data) => {\n      if (err) throw err;\n    \n      // Converting Raw Buffer to text\n      // data using tostring function.\n      console.log(data);\n  })\n\n  return (\n    <div className=\"root\">\n      <div className=\"topbar\">Game P,W Scores</div>\n      <div className=\"bar1\">\n        Produce\n      </div>\n      <div className=\"bar2\">\n        Wares\n      </div>\n      <div className=\"bar3\">\n        Auction\n      </div>\n      <div className=\"bar4\">\n        History\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;EAEb,MAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;EACAD,EAAE,CAACE,QAAH,CAAY,UAAZ,EAAwB,OAAxB,EAAiC,CAACC,GAAD,EAAMC,IAAN,KAAe;IAC5C,IAAID,GAAJ,EAAS,MAAMA,GAAN,CADmC,CAG5C;IACA;;IACAE,OAAO,CAACC,GAAR,CAAYF,IAAZ;EACH,CAND;EAQA,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,wBACE;MAAK,SAAS,EAAC,QAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,MAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAKE;MAAK,SAAS,EAAC,MAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALF,eAQE;MAAK,SAAS,EAAC,MAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARF,eAWE;MAAK,SAAS,EAAC,MAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAXF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD;;KA5BQL,G;AA8BT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}